/*
...11111111111111111111111111111
11.111111........1111111111.1111
11.111111..111.11111111.....1111
11.11111111111.1111111111.111111
11.111111.................111111
11.111111.11111111111.11111.1111
11.111111.11111111111.11111..111
11..........111111111.11111.1111
11111.111111111111111.11....1111
11111.111111111111111.11.11.1111
11111.111111111111111.11.11.1111
111...111111111111111.11.11.1111
111.11111111111111111....11.1111
111.11111111111111111111111.1111
111.1111.111111111111111......11
111.1111.......111111111.1111.11
111.1111.11111.111111111.1111.11
111......11111.111111111.1111111
11111111111111.111111111.111...1
11111111111111...............1.1
111111111111111111111111111111..

如上图的迷宫，入口，出口分别：左上角，右下角
"1"是墙壁，"."是通路
求最短需要走多少步？*/ 
#include <iostream>
#include <string>
#include <set>
/* run this program using the console pauser or add your own getch, system("pause") or input loop */

using namespace std;

struct Matrix{
	int y,x;
}; 

int f(string data[],set<string> from,string goal){
	if(from.find(goal)!=from.end()) return 0;//起点与中点重合，需要0步 
}

int main(int argc, char** argv) {
	string data[21];
	for(int i=0;i<21;i++){
		cin>>data[i];
	}
	int n=21,m=32; 
    set<Matrix> set;
    set.insert("0,0"); //初始set里包含起点位置 
    cout<<f(data,set,);
	return 0;
}
